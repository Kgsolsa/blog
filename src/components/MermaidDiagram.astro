---
// MermaidDiagram.astro
// Component for rendering Mermaid diagrams with proper styling and error handling

export interface Props {
  id: string;
  source: string;
  class?: string;
}

const { id, source, class: className = '' } = Astro.props;
---

<div class={`mermaid-diagram ${className}`} data-mermaid-id={id} data-mermaid-source={source}>
  <div class="mermaid-diagram-content">
    <pre class="mermaid-diagram-source"><code>{source}</code></pre>
  </div>
</div>

<style>
  .mermaid-diagram {
    @apply my-6 mx-auto max-w-full overflow-hidden;
  }

  .mermaid-diagram-content {
    @apply relative;
  }

  .mermaid-diagram-source {
    @apply hidden;
  }

  /* Mermaid diagram styling */
  .mermaid-diagram :global(.mermaid) {
    @apply text-center;
  }

  /* Error state styling */
  .mermaid-diagram.error {
    @apply border border-red-200 dark:border-red-800 rounded-lg p-4 bg-red-50 dark:bg-red-900/20;
  }

  .mermaid-diagram.error .mermaid-diagram-content {
    @apply text-red-700 dark:text-red-300;
  }

  /* Loading state styling */
  .mermaid-diagram.loading {
    @apply border border-primary-200 dark:border-primary-600 rounded-lg p-4 bg-primary-50 dark:bg-primary-800/20;
  }

  .mermaid-diagram.loading .mermaid-diagram-content {
    @apply text-primary-600 dark:text-primary-400;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .mermaid-diagram {
      @apply mx-0;
    }
  }
</style>
