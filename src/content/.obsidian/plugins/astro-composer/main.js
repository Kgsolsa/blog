/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var M=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var Y=(P,y)=>{for(var s in y)M(P,s,{get:y[s],enumerable:!0})},V=(P,y,s,e)=>{if(y&&typeof y=="object"||typeof y=="function")for(let t of L(y))!R.call(P,t)&&t!==s&&M(P,t,{get:()=>y[t],enumerable:!(e=S(y,t))||e.enumerable});return P};var B=P=>V(M({},"__esModule",{value:!0}),P);var U={};Y(U,{default:()=>k});module.exports=B(U);var i=require("obsidian"),W={enableUnderscorePrefix:!1,defaultTemplate:`---
title: "{{title}}"
date: {{date}}
tags: []
---
`,linkBasePath:"/blog/",postsFolder:"posts",automatePostCreation:!0,autoInsertProperties:!0,creationMode:"file",indexFileName:"index",dateFormat:"YYYY-MM-DD",excludedDirectories:"",onlyAutomateInPostsFolder:!1,enablePages:!1,pagesFolder:"pages",pageTemplate:`---
title: "{{title}}"
description: ""
---
`},k=class extends i.Plugin{async onload(){await this.loadSettings(),this.app.workspace.onLayoutReady(()=>{this.registerCreateEvent()}),this.addCommand({id:"standardize-properties",name:"Standardize Properties",icon:"file-check",editorCallback:(s,e)=>{e.file instanceof i.TFile&&this.standardizeProperties(e.file)}}),this.addCommand({id:"convert-wikilinks-astro",name:"Convert internal links for Astro",icon:"link-2",editorCallback:(s,e)=>{e.file instanceof i.TFile&&this.convertWikilinksForAstro(s,e.file)}}),this.addCommand({id:"rename-note",name:"Rename Current Note",icon:"pencil",editorCallback:(s,e)=>{if(e.file instanceof i.TFile){let t=this.determineType(e.file),o=this.getTitleKey(t),n=this.app.metadataCache.getFileCache(e.file);if(!(n!=null&&n.frontmatter)||!(o in n.frontmatter)){new i.Notice("Cannot rename: No title found in frontmatter");return}new $(this.app,e.file,this,t,!0).open()}}}),this.addSettingTab(new I(this.app,this))}determineType(s){let e=s.path,t=this.settings.pagesFolder||"";return this.settings.enablePages&&t&&(e.startsWith(t+"/")||e===t)?"page":"post"}getTitleKey(s){let t=(s==="post"?this.settings.defaultTemplate:this.settings.pageTemplate).split(`
`),o=!1;for(let n of t){let a=n.trim();if(a==="---"){o=!o;continue}if(o){let l=a.match(/^(\w+):\s*(.+)$/);if(l){let r=l[1];if(l[2].includes("{{title}}"))return r}}}return"title"}async updateTitleInFrontmatter(s,e,t){let o=this.getTitleKey(t),n=await this.app.vault.read(s),a=0,l="",r=["tags","aliases","cssclasses"];n.startsWith("---")&&(a=n.indexOf(`
---`,3),a===-1?a=n.length:a+=4,l=n.slice(4,a-4).trim());let c=[],p={},h=null;l.split(`
`).forEach(m=>{let w=m.match(/^(\w+):\s*(.+)?$/);if(w){let[,b,A]=w;c.push(b),h=b,r.includes(b)?p[b]=[]:p[b]=A?A.trim():""}else if(h&&r.includes(h)&&m.trim().startsWith("- ")){let b=m.trim().replace(/^-\s*/,"");b&&p[h].push(b)}});let g=e.replace(/"/g,'\\"'),v=e.includes(" ")||e.includes('"')?`"${g}"`:e;p[o]=v,c.includes(o)||c.push(o);let u=`---
`;for(let m of c){let w=p[m];Array.isArray(w)?(u+=`${m}:
`,w.length>0&&w.forEach(b=>{u+=`  - ${b}
`})):u+=`${m}: ${w||""}
`}u+="---";let C=n.slice(a);u+=C,await this.app.vault.modify(s,u)}async renameFile(s,e,t){if(!e)return new i.Notice("Title is required to rename the note."),null;let o=this.toKebabCase(e),n="";if(this.settings.creationMode==="folder")if(s.basename===this.settings.indexFileName){if(!s.parent)return new i.Notice("Cannot rename: File has no parent folder."),null;n=s.parent.name.startsWith("_")?"_":"";let l=`${n}${o}`,r=s.parent.parent;if(!r)return new i.Notice("Cannot rename: Parent folder has no parent."),null;let c=`${r.path}/${l}`;if(this.app.vault.getAbstractFileByPath(c)instanceof i.TFolder)return new i.Notice(`Folder already exists at ${c}.`),null;await this.app.vault.rename(s.parent,c);let h=`${c}/${s.name}`,g=this.app.vault.getAbstractFileByPath(h);return g instanceof i.TFile?g:(new i.Notice("Failed to locate renamed file."),null)}else{if(!s.parent)return new i.Notice("Cannot rename: File has no parent folder."),null;n=s.basename.startsWith("_")?"_":"";let l=`${n}${o}.md`,r=`${s.parent.path}/${l}`,c=this.app.vault.getAbstractFileByPath(r);if(c instanceof i.TFile&&c!==s)return new i.Notice(`File already exists at ${r}.`),null;await this.app.vault.rename(s,r);let p=this.app.vault.getAbstractFileByPath(r);return p instanceof i.TFile?p:(new i.Notice("Failed to locate renamed file."),null)}else{if(!s.parent)return new i.Notice("Cannot rename: File has no parent folder."),null;n=s.basename.startsWith("_")?"_":"";let a=`${n}${o}.md`,l=`${s.parent.path}/${a}`,r=this.app.vault.getAbstractFileByPath(l);if(r instanceof i.TFile&&r!==s)return new i.Notice(`File already exists at ${l}.`),null;await this.app.vault.rename(s,l);let c=this.app.vault.getAbstractFileByPath(l);return c instanceof i.TFile?c:(new i.Notice("Failed to locate renamed file."),null)}}registerCreateEvent(){if(this.createEvent&&this.app.vault.off("create",this.createEvent),this.settings.automatePostCreation||this.settings.enablePages){let s=0,e=500;this.createEvent=async t=>{let o=Date.now();if(!(o-s<e)&&(s=o,t instanceof i.TFile&&t.extension==="md")){let n=t.path,a=await this.app.vault.adapter.stat(t.path),l=(a==null?void 0:a.mtime)&&o-a.mtime<1e3,c=(await this.app.vault.read(t)).trim()==="";if(!l||!c)return;let p=this.settings.postsFolder||"",h=this.settings.enablePages&&this.settings.pagesFolder||"",g=!1;h&&(n.startsWith(h+"/")||n===h)&&(g=!0);let v=this.app.metadataCache.getFileCache(t);if(!v||!v.sections||v.sections.length===0)if(g)this.settings.enablePages&&new $(this.app,t,this,"page").open();else if(this.settings.onlyAutomateInPostsFolder)(!p||n.startsWith(p+"/")||n===p)&&new $(this.app,t,this,"post").open();else{let u=this.settings.excludedDirectories.split("|").map(m=>m.trim()).filter(m=>m.length>0);h&&u.push(h),u.some(m=>n.startsWith(m+"/")||n===m)||new $(this.app,t,this,"post").open()}}},this.registerEvent(this.app.vault.on("create",this.createEvent))}}toKebabCase(s){return s.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}async createFile(s,e,t){if(!e)return new i.Notice(`Title is required to create a ${t}.`),null;let o=this.toKebabCase(e),n=this.settings.enableUnderscorePrefix?"_":"",a=t==="post"?this.settings.postsFolder||"":this.settings.pagesFolder||"";if(a&&(this.app.vault.getAbstractFileByPath(a)instanceof i.TFolder||await this.app.vault.createFolder(a)),this.settings.creationMode==="folder"){let l=`${n}${o}`,r=a?`${a}/${l}`:l;try{this.app.vault.getAbstractFileByPath(r)instanceof i.TFolder||await this.app.vault.createFolder(r)}catch(g){}let c=`${this.settings.indexFileName}.md`,p=`${r}/${c}`;if(this.app.vault.getAbstractFileByPath(p)instanceof i.TFile)return new i.Notice(`File already exists at ${p}.`),null;try{await this.app.vault.rename(s,p);let g=this.app.vault.getAbstractFileByPath(p);return g instanceof i.TFile?(setTimeout(()=>{let u=this.app.workspace.getLeavesOfType("file-explorer")[0];if(u&&u.view){let C=u.view.tree;C&&g instanceof i.TFile&&C.revealFile(g)}},200),await this.app.workspace.getLeaf(!1).openFile(g),this.settings.autoInsertProperties&&await this.addPropertiesToFile(g,e,t),g):null}catch(g){return new i.Notice(`Failed to create folder structure: ${g.message}.`),null}}else{let l=`${n}${o}.md`,r=a?`${a}/${l}`:l,c=this.app.vault.getAbstractFileByPath(r);if(c instanceof i.TFile&&c!==s)return new i.Notice(`File with name "${l}" already exists.`),null;try{await this.app.vault.rename(s,r);let p=this.app.vault.getAbstractFileByPath(r);return p instanceof i.TFile?(await this.app.workspace.getLeaf(!1).openFile(p),this.settings.autoInsertProperties&&await this.addPropertiesToFile(p,e,t),p):null}catch(p){return new i.Notice(`Failed to rename file: ${p.message}.`),null}}}async addPropertiesToFile(s,e,t="post"){let o=new Date,n=window.moment(o).format(this.settings.dateFormat),a=t==="post"?this.settings.defaultTemplate:this.settings.pageTemplate;a=a.replace(/\{\{title\}\}/g,e),a=a.replace(/\{\{date\}\}/g,n),await this.app.vault.modify(s,a)}async standardizeProperties(s){var A;if(!(s instanceof i.TFile)){new i.Notice("No active file.");return}let e=s.path,t=this.settings.pagesFolder||"",n=this.settings.enablePages&&t&&(e.startsWith(t+"/")||e===t)?this.settings.pageTemplate:this.settings.defaultTemplate;await new Promise(d=>setTimeout(d,100));let a=await this.app.vault.read(s),l=s.basename.replace(/^_/,""),r=0,c="",p={},h=["tags","aliases","cssclasses"];if(a.startsWith("---")){r=a.indexOf(`
---`,3),r===-1?r=a.length:r+=4,c=a.slice(4,r-4).trim();try{let d=null;c.split(`
`).forEach(f=>{let T=f.match(/^(\w+):\s*(.+)?$/);if(T){let[,F,x]=T;d=F,h.includes(F)?p[F]=[]:p[F]=[x?x.trim():""]}else if(d&&h.includes(d)&&f.trim().startsWith("- ")){let F=f.trim().replace(/^-\s*/,"");F&&p[d].push(F)}else if(f.trim()&&!f.trim().startsWith("- ")){let F=f.match(/^(\w+):/);if(F){let x=F[1],E=f.slice(f.indexOf(":")+1).trim();p[x]||(p[x]=[E||""])}}}),h.forEach(f=>{c.includes(f+":")&&!p[f]&&(p[f]=[])})}catch(d){new i.Notice("Falling back to template due to parsing error.")}}let g=n.split(`
`),v=[],u={},C=!1;for(let d=0;d<g.length;d++){let f=g[d].trim();if(f==="---"){if(C=!C,!C)break;continue}if(C){let T=f.match(/^(\w+):\s*(.+)?$/);if(T){let[,F,x]=T;if(v.push(F),h.includes(F))if(x&&x.startsWith("[")){let E=x.replace(/[\[\]]/g,"").split(",").map(D=>D.trim()).filter(D=>D);u[F]=E}else{u[F]=[];for(let E=d+1;E<g.length;E++){let D=g[E].trim();if(D.startsWith("- ")){let N=D.replace(/^-\s*/,"").trim();N&&u[F].push(N)}else if(D==="---")break}}else u[F]=[(x||"").replace(/\{\{title\}\}/g,l).replace(/\{\{date\}\}/g,window.moment(new Date).format(this.settings.dateFormat))]}}}let m={...p};for(let d of v)if(!(d in p))m[d]=u[d]||(h.includes(d)?[]:[""]);else if(h.includes(d)&&((A=u[d])==null?void 0:A.length)>0){let f=[...p[d]||[],...u[d].filter(T=>!(p[d]||[]).includes(T))];m[d]=f}let w=`---
`;for(let d in m)h.includes(d)?(w+=`${d}:
`,m[d].length>0&&m[d].forEach(f=>{w+=`  - ${f}
`})):w+=`${d}: ${m[d][0]||""}
`;w+="---";let b=a.slice(r);w+=b,await this.app.vault.modify(s,w),new i.Notice("Properties standardized using template.")}getAstroUrlFromInternalLink(s){let e=s.indexOf("#"),t=e>=0?s.slice(0,e):s,o=e>=0?s.slice(e):"";t=t.replace(/\.md$/,""),t.startsWith(this.settings.postsFolder+"/")?t=t.slice(this.settings.postsFolder.length+1):this.settings.enablePages&&t.startsWith(this.settings.pagesFolder+"/")&&(t=t.slice(this.settings.pagesFolder.length+1));let n=!1;if(this.settings.creationMode==="folder"){let c=t.split("/");c[c.length-1]===this.settings.indexFileName&&(c.pop(),t=c.join("/"),n=!0)}let l=t.split("/").map(c=>this.toKebabCase(c)).join("/"),r=this.settings.linkBasePath;return r.startsWith("/")||(r="/"+r),r.endsWith("/")||(r+="/"),`${r}${l}${n?"/":""}${o}`}async convertWikilinksForAstro(s,e){if(!(e instanceof i.TFile)){new i.Notice("No active file.");return}let o=s.getValue(),n=/\.(png|jpg|jpeg|gif|svg)$/i;o=o.replace(/\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(a,l,r,c)=>{if(n.test(l))return a;let p=c||l.replace(/\.md$/,""),h=this.getAstroUrlFromInternalLink(l);return`[${p}](${h})`}),o=o.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(a,l,r)=>{if(r.match(/^https?:\/\//)||n.test(r)||!r.includes(".md"))return a;let c=this.getAstroUrlFromInternalLink(r);return`[${l}](${c})`}),o=o.replace(/!\[(.*?)\]\(([^)]+)\)/g,a=>a),o=o.replace(/\{\{([^}]+)\}\}/g,(a,l)=>{if(n.test(l))return a;let r=this.getAstroUrlFromInternalLink(l);return`[Embedded: ${l}](${r})`}),s.setValue(o),new i.Notice("All internal links converted for Astro.")}async loadSettings(){this.settings=Object.assign({},W,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},$=class extends i.Modal{constructor(s,e,t,o="post",n=!1){super(s);this.file=e,this.plugin=t,this.type=o,this.isRename=n}getCurrentTitle(){let s=this.plugin.getTitleKey(this.type),e=this.app.metadataCache.getFileCache(this.file),t=this.file.basename;this.file.parent&&t===this.plugin.settings.indexFileName&&(t=this.file.parent.name),t.startsWith("_")&&(t=t.slice(1));let o=t.replace(/-/g," ").split(" ").map(n=>n.charAt(0).toUpperCase()+n.slice(1)).join(" ");return e!=null&&e.frontmatter&&e.frontmatter[s]?e.frontmatter[s]:o}onOpen(){let{contentEl:s}=this;s.empty(),this.isRename?(s.createEl("h2",{text:"Rename Note"}),s.createEl("p",{text:"Enter new title for your note:"}),this.titleInput=s.createEl("input",{type:"text",placeholder:"My Renamed Note",cls:"astro-composer-title-input"}),this.titleInput.value=this.getCurrentTitle()):(s.createEl("h2",{text:this.type==="post"?"New Blog Post":"New Page"}),s.createEl("p",{text:`Enter a title for your ${this.type}:`}),this.titleInput=s.createEl("input",{type:"text",placeholder:this.type==="post"?"My Awesome Blog Post":"My Awesome Page",cls:"astro-composer-title-input"})),this.titleInput.focus();let e=s.createDiv({cls:"astro-composer-button-container"}),t=e.createEl("button",{text:"Cancel",cls:"astro-composer-cancel-button"});t.onclick=()=>this.close();let o=e.createEl("button",{text:this.isRename?"Rename":"Create",cls:["astro-composer-create-button","mod-cta"]});o.onclick=()=>this.submit(),this.titleInput.addEventListener("keypress",n=>{n.key==="Enter"&&this.submit()})}async submit(){let s=this.titleInput.value.trim();if(!s){new i.Notice("Please enter a title.");return}try{let e=null;if(this.isRename?(e=await this.plugin.renameFile(this.file,s,this.type),e&&await this.plugin.updateTitleInFrontmatter(e,s,this.type)):(e=await this.plugin.createFile(this.file,s,this.type),e&&this.plugin.settings.autoInsertProperties&&await this.plugin.addPropertiesToFile(e,s,this.type)),!e)throw new Error("Failed to process the note.")}catch(e){new i.Notice(`Error ${this.isRename?"renaming":"creating"} ${this.type}: ${e.message}.`)}this.close()}onClose(){let{contentEl:s}=this;s.empty()}},I=class extends i.PluginSettingTab{constructor(s,e){super(s,e);this.autoRenameContainer=null;this.postsFolderContainer=null;this.onlyAutomateContainer=null;this.creationModeContainer=null;this.indexFileContainer=null;this.excludedDirsContainer=null;this.underscorePrefixContainer=null;this.autoInsertContainer=null;this.pagesFieldsContainer=null;this.plugin=e}display(){let{containerEl:s}=this;s.empty(),new i.Setting(s).setName("Automate post creation").setDesc("Automatically show title dialog for new .md files, rename them based on the title, and insert properties if enabled.").addToggle(e=>e.setValue(this.plugin.settings.automatePostCreation).onChange(async t=>{this.plugin.settings.automatePostCreation=t,this.plugin.settings.autoInsertProperties=t,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updateConditionalFields()})),this.autoRenameContainer=s.createDiv({cls:"auto-rename-fields"}),this.autoRenameContainer.style.display=this.plugin.settings.automatePostCreation?"block":"none",this.autoInsertContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.autoInsertContainer).setName("Auto-insert properties").setDesc("Automatically insert the properties template when creating new files (requires 'Automate post creation' to be enabled).").addToggle(e=>e.setValue(this.plugin.settings.autoInsertProperties).setDisabled(!this.plugin.settings.automatePostCreation).onChange(async t=>{this.plugin.settings.autoInsertProperties=t,await this.plugin.saveSettings()})),this.postsFolderContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.postsFolderContainer).setName("Posts folder").setDesc("Folder name for blog posts (leave blank to use the vault folder). You can specify the default location for new notes in Obsidian's 'Files and links' settings.").addText(e=>e.setPlaceholder("Enter folder path").setValue(this.plugin.settings.postsFolder).onChange(async t=>{this.plugin.settings.postsFolder=t,await this.plugin.saveSettings()})),this.onlyAutomateContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.onlyAutomateContainer).setName("Only automate in this folder").setDesc("When enabled, automation will only trigger for new .md files within the specified Posts folder and subfolders.").addToggle(e=>e.setValue(this.plugin.settings.onlyAutomateInPostsFolder).onChange(async t=>{this.plugin.settings.onlyAutomateInPostsFolder=t,await this.plugin.saveSettings(),this.updateExcludedDirsField()})),this.excludedDirsContainer=this.autoRenameContainer.createDiv({cls:"excluded-dirs-field"}),this.excludedDirsContainer.style.display=this.plugin.settings.onlyAutomateInPostsFolder?"none":"block",new i.Setting(this.excludedDirsContainer).setName("Excluded directories").setDesc("Directories to exclude from automatic post creation (e.g., pages|posts/example). Excluded directories and their child folders will be ignored. Use '|' to separate multiple directories.").addText(e=>e.setPlaceholder("pages|posts/example").setValue(this.plugin.settings.excludedDirectories).onChange(async t=>{this.plugin.settings.excludedDirectories=t,await this.plugin.saveSettings()})),this.creationModeContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.creationModeContainer).setName("Creation mode").setDesc("How to create new posts: file-based or folder-based with index.md.").addDropdown(e=>e.addOption("file","File-based (post-title.md)").addOption("folder","Folder-based (post-title/index.md)").setValue(this.plugin.settings.creationMode).onChange(async t=>{this.plugin.settings.creationMode=t,await this.plugin.saveSettings(),this.updateIndexFileField()})),this.indexFileContainer=this.autoRenameContainer.createDiv({cls:"index-file-field"}),this.indexFileContainer.style.display=this.plugin.settings.creationMode==="folder"?"block":"none",new i.Setting(this.indexFileContainer).setName("Index file name").setDesc("Name for the main file in folder-based mode (without .md extension).").addText(e=>e.setPlaceholder("index").setValue(this.plugin.settings.indexFileName).onChange(async t=>{this.plugin.settings.indexFileName=t||"index",await this.plugin.saveSettings()})),this.underscorePrefixContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.underscorePrefixContainer).setName("Use underscore prefix for drafts").setDesc("Add an underscore prefix (_post-title) to new notes by default when enabled. This hides them from Astro, which can be helpful for post drafts. Disable to skip prefixing.").addToggle(e=>e.setValue(this.plugin.settings.enableUnderscorePrefix).onChange(async t=>{this.plugin.settings.enableUnderscorePrefix=t,await this.plugin.saveSettings()})),new i.Setting(s).setName("Link base path").setDesc("Base path for converted links (e.g., /blog/, leave blank for root domain).").addText(e=>e.setPlaceholder("/blog/").setValue(this.plugin.settings.linkBasePath).onChange(async t=>{this.plugin.settings.linkBasePath=t,await this.plugin.saveSettings()})),new i.Setting(s).setName("Date format").setDesc("Format for the date in properties (e.g., YYYY-MM-DD, MMMM D, YYYY, YYYY-MM-DD HH:mm).").addText(e=>e.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.dateFormat).onChange(async t=>{this.plugin.settings.dateFormat=t||"YYYY-MM-DD",await this.plugin.saveSettings()})),new i.Setting(s).setName("Properties template").addTextArea(e=>{let t=this.plugin;return e.setPlaceholder(`---
title: "{{title}}"
date: {{date}}
tags: []
---
`).setValue(t.settings.defaultTemplate).onChange(async o=>{t.settings.defaultTemplate=o,await t.saveSettings()}),e.inputEl.classList.add("astro-composer-template-textarea"),e}).then(e=>{e.descEl.empty();let t=e.descEl.createEl("div");t.innerHTML="Used for new posts and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),new i.Setting(s).setName("Automate page creation").setDesc("Enable automatic page creation in a specified folder.").addToggle(e=>e.setValue(this.plugin.settings.enablePages).onChange(async t=>{this.plugin.settings.enablePages=t,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updatePagesFields()})),this.pagesFieldsContainer=s.createDiv(),this.pagesFieldsContainer.style.display=this.plugin.settings.enablePages?"block":"none",new i.Setting(this.pagesFieldsContainer).setName("Pages folder").setDesc("Folder for pages (leave blank to disable). Posts automation will exclude this folder.").addText(e=>e.setPlaceholder("Enter folder path").setValue(this.plugin.settings.pagesFolder).onChange(async t=>{this.plugin.settings.pagesFolder=t,await this.plugin.saveSettings()})),new i.Setting(this.pagesFieldsContainer).setName("Page properties template").addTextArea(e=>{let t=this.plugin;return e.setPlaceholder(`---
title: "{{title}}"
description: ""
---
`).setValue(t.settings.pageTemplate).onChange(async o=>{t.settings.pageTemplate=o,await t.saveSettings()}),e.inputEl.classList.add("astro-composer-template-textarea"),e}).then(e=>{e.descEl.empty();let t=e.descEl.createEl("div");t.innerHTML="Used for new pages and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),this.updateConditionalFields(),this.updateIndexFileField(),this.updateExcludedDirsField(),this.updatePagesFields()}updateConditionalFields(){this.autoRenameContainer&&(this.autoRenameContainer.style.display=this.plugin.settings.automatePostCreation?"block":"none")}updateIndexFileField(){this.indexFileContainer&&(this.indexFileContainer.style.display=this.plugin.settings.creationMode==="folder"?"block":"none")}updateExcludedDirsField(){this.excludedDirsContainer&&(this.excludedDirsContainer.style.display=this.plugin.settings.onlyAutomateInPostsFolder?"none":"block")}updatePagesFields(){this.pagesFieldsContainer&&(this.pagesFieldsContainer.style.display=this.plugin.settings.enablePages?"block":"none")}};
