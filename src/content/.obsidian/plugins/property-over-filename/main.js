/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var S=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var C=(p,h)=>{for(var e in h)S(p,e,{get:h[e],enumerable:!0})},T=(p,h,e,t)=>{if(h&&typeof h=="object"||typeof h=="function")for(let s of I(h))!v.call(p,s)&&s!==e&&S(p,s,{get:()=>h[s],enumerable:!(t=b(h,s))||t.enumerable});return p};var x=p=>T(S({},"__esModule",{value:!0}),p);var Q={};C(Q,{default:()=>w});module.exports=x(Q);var g=require("obsidian"),N={propertyKey:"title",enableForLinking:!0,enableForQuickSwitcher:!0,includeFilenameInSearch:!0,includeAliasesInSearch:!0},y=class extends g.EditorSuggest{constructor(e){super(e.app);this.plugin=e}open(){super.open();let e=this.suggestEl;if(e&&!e.querySelector(".prompt-instructions")){let t=e.createDiv({cls:"prompt-instructions"});t.createDiv({cls:"prompt-instruction"}).setText("Type # to link heading"),t.createDiv({cls:"prompt-instruction"}).setText("Type ^ to link blocks"),t.createDiv({cls:"prompt-instruction"}).setText("Type | to change display text")}}onTrigger(e,t,s){if(!this.plugin.settings.enableForLinking)return null;let n=t.getLine(e.line).substring(0,e.ch),a=/\[\[([^#^|\]]*)$/.exec(n);return a?{start:{line:e.line,ch:n.lastIndexOf("[[")},end:e,query:a[1]}:null}getSuggestions(e){let t=e.query.trim(),s=[],n=new Set;return this.app.vault.getMarkdownFiles().forEach(a=>{let i=this.app.metadataCache.getFileCache(a),r=i==null?void 0:i.frontmatter,o=a.basename,l=!1;if(r&&r[this.plugin.settings.propertyKey]!==void 0&&r[this.plugin.settings.propertyKey]!==null){let u=String(r[this.plugin.settings.propertyKey]).trim();u!==""&&(o=u,l=!0)}let c=!t||this.fuzzyMatch(o,t);if(this.plugin.settings.includeFilenameInSearch&&(c=c||this.fuzzyMatch(a.basename,t)),this.plugin.settings.includeAliasesInSearch&&(r!=null&&r.aliases)){let u=Array.isArray(r.aliases)?r.aliases:[r.aliases];c=c||u.some(m=>this.fuzzyMatch(String(m).trim(),t))}c&&(s.push({file:a,display:o,isCustomDisplay:l}),n.add(a.basename.toLowerCase()))}),t&&!n.has(t.toLowerCase())&&s.unshift({display:t,isCustomDisplay:!1,isNewNote:!0}),this.sortSuggestions(s,t)}fuzzyMatch(e,t){let s=0,n=e.toLowerCase(),a=t.toLowerCase();for(let i of a)if(s=n.indexOf(i,s)+1,s===0)return!1;return!0}sortSuggestions(e,t){return e.sort((s,n)=>{var r,o,l,c;let a=this.getMatchScore(s.display,t,(o=(r=s.file)==null?void 0:r.basename)!=null?o:""),i=this.getMatchScore(n.display,t,(c=(l=n.file)==null?void 0:l.basename)!=null?c:"");return s.isNewNote?-1:n.isNewNote?1:i-a||s.display.localeCompare(n.display)})}getMatchScore(e,t,s){let n=0,a=e.toLowerCase(),i=s.toLowerCase(),r=t.toLowerCase();return a.startsWith(r)?n+=10:a.includes(r)&&(n+=5),this.plugin.settings.includeFilenameInSearch&&i.startsWith(r)?n+=8:this.plugin.settings.includeFilenameInSearch&&i.includes(r)&&(n+=4),n}renderSuggestion(e,t){t.empty();let s=t.createDiv({cls:"suggestion-content"});s.createDiv({cls:"suggestion-title",text:e.display}),e.file&&s.createDiv({cls:"suggestion-note",text:e.file.path.replace(".md","")})}async selectSuggestion(e,t){var m;let s=this.app.workspace.getActiveViewOfType(g.MarkdownView);if(!s||!this.context)return;let n=s.editor,{start:a,end:i}=this.context,r=n.getLine(a.line),o=i;r.slice(i.ch,i.ch+2)==="]]"&&(o={line:i.line,ch:i.ch+2});let l=(m=this.app.vault.getConfig("useMarkdownLinks"))!=null?m:!1,c;if(e.isNewNote){let d=await this.app.vault.create(`${e.display}.md`,"");c=l?`[${e.display}](${encodeURI(d.path)})`:`[[${d.basename}]]`,this.app.workspace.activeLeaf&&await this.app.workspace.activeLeaf.openFile(d)}else l?c=`[${e.display}](${encodeURI(e.file.path)})`:c=`[[${e.file.basename}|${e.display}]]`;n.replaceRange(c,{line:a.line,ch:a.ch},o);let u=a.ch+c.length;try{n.setCursor({line:a.line,ch:u})}catch(d){console.error("Error setting cursor:",d),new g.Notice("Error setting cursor position. Please check console for details.")}}},f=class extends g.FuzzySuggestModal{constructor(e,t){super(e);this.plugin=t,this.limit=100,this.setPlaceholder("Type to search notes by title or filename...")}getItems(){return this.app.vault.getMarkdownFiles()}getItemText(e){if("isNewNote"in e)return`Create new note: ${e.newName}`;let t=this.getDisplayName(e);return t+(this.plugin.settings.includeFilenameInSearch&&t!==e.basename?` (${e.basename})`:"")}getDisplayName(e){let t=this.app.metadataCache.getFileCache(e),s=t==null?void 0:t.frontmatter,n=s==null?void 0:s[this.plugin.settings.propertyKey];if(n!=null){let a=String(n).trim();if(a!=="")return a}return e.basename}getSuggestions(e){if(!this.plugin.settings.enableForQuickSwitcher)return[];let t=e.trim(),s=this.getItems(),n=(0,g.prepareFuzzySearch)(t),a=s.map(i=>{var m;let r=this.getItemText(i),o=this.app.metadataCache.getFileCache(i),l=o==null?void 0:o.frontmatter,c=t?(m=n(r))!=null?m:{score:0,matches:[]}:{score:0,matches:[]},u=!1;return this.plugin.settings.includeAliasesInSearch&&(l!=null&&l.aliases)&&(u=(Array.isArray(l.aliases)?l.aliases:[l.aliases]).some(F=>this.fuzzyMatch(String(F).trim(),t))),u&&c.matches.length===0?{item:i,match:{score:-.1,matches:[[0,t.length]]}}:{item:i,match:c}});try{if(t){a=a.filter(o=>o.match.matches.length>0).sort((o,l)=>l.match.score-o.match.score||this.getItemText(o.item).localeCompare(this.getItemText(l.item))).slice(0,this.limit);let i=t.toLowerCase();if(!s.some(o=>{var l,c,u;return!("isNewNote"in o)&&(this.getDisplayName(o).toLowerCase()===i||this.plugin.settings.includeFilenameInSearch&&o.basename.toLowerCase()===i||this.plugin.settings.includeAliasesInSearch&&((u=(c=(l=this.app.metadataCache.getFileCache(o))==null?void 0:l.frontmatter)==null?void 0:c.aliases)==null?void 0:u.some(m=>String(m).trim().toLowerCase()===i)))})){let o={isNewNote:!0,newName:t};a.unshift({item:o,match:{score:1e3,matches:[[0,t.length]]}})}}else a=a.sort((i,r)=>this.getItemText(i.item).localeCompare(this.getItemText(r.item))).slice(0,this.limit);return a}catch(i){return console.error("Error generating suggestions:",i),new g.Notice("Error updating Quick Switcher suggestions. Please check console for details."),[]}}fuzzyMatch(e,t){let s=0,n=e.toLowerCase(),a=t.toLowerCase();for(let i of a)if(s=n.indexOf(i,s)+1,s===0)return!1;return!0}renderSuggestion(e,t){let{item:s,match:n}=e,a=this.inputEl.value.trim(),i=this.getItemText(s),r=t.createDiv({cls:"suggestion-content"});if("isNewNote"in s){r.setText(i);return}if(a&&n.matches.length>0){let o=0,l=document.createDocumentFragment();for(let c of n.matches){l.appendText(i.slice(o,c[0]));let u=document.createElement("span");u.className="suggestion-highlight",u.appendText(i.slice(c[0],c[1])),l.appendChild(u),o=c[1]}l.appendText(i.slice(o)),r.appendChild(l)}else r.setText(i);r.createDiv({cls:"suggestion-note",text:s.path.replace(".md","")})}onChooseItem(e,t){"isNewNote"in e?this.app.vault.create(`${e.newName}.md`,"").then(s=>{this.app.workspace.getLeaf().openFile(s)}).catch(s=>{new g.Notice(`Error creating note: ${s.message}`)}):this.app.workspace.getLeaf().openFile(e)}},w=class extends g.Plugin{async onload(){await this.loadSettings(),this.updateLinkSuggester(),this.updateQuickSwitcher(),this.addSettingTab(new k(this.app,this))}updateLinkSuggester(){let e=this.app.workspace.editorSuggest;e&&(this.suggest&&(e.suggests=e.suggests.filter(t=>t!==this.suggest),this.suggest=void 0),this.settings.enableForLinking&&(this.suggest=new y(this),this.registerEditorSuggest(this.suggest),e.suggests=e.suggests.filter(t=>!t.constructor.name.includes("LinkSuggest")),e.suggests.unshift(this.suggest)))}updateQuickSwitcher(){let e=this.app.commands.commands["switcher:open"];if(!e){console.error("Failed to find switcher:open command"),new g.Notice("Failed to override Quick Switcher. Please ensure the core Quick Switcher is enabled.");return}this.originalSwitcherCallback&&(e.callback=this.originalSwitcherCallback,this.originalSwitcherCallback=void 0),this.settings.enableForQuickSwitcher&&(this.originalSwitcherCallback=e.callback,e.callback=()=>{new f(this.app,this).open()})}onunload(){let e=this.app.workspace.editorSuggest;e&&this.suggest&&(e.suggests=e.suggests.filter(s=>s!==this.suggest));let t=this.app.commands.commands["switcher:open"];t&&this.originalSwitcherCallback&&(t.callback=this.originalSwitcherCallback)}async loadSettings(){this.settings=Object.assign({},N,await this.loadData())}async saveSettings(e){await this.saveData(this.settings),this.updateLinkSuggester(),this.updateQuickSwitcher()}},k=class extends g.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new g.Setting(e).setName("Property key").setDesc('The frontmatter property to use as the display title (e.g., "title" or "display_title").').addText(t=>t.setPlaceholder("title").setValue(this.plugin.settings.propertyKey).onChange(async s=>{this.plugin.settings.propertyKey=s||"title",await this.plugin.saveSettings(this.plugin.settings.enableForQuickSwitcher)})),new g.Setting(e).setName("When linking notes").setDesc("Enable property-based titles in the link suggester ([[).").addToggle(t=>t.setValue(this.plugin.settings.enableForLinking).onChange(async s=>{this.plugin.settings.enableForLinking=s,await this.plugin.saveSettings(this.plugin.settings.enableForQuickSwitcher)})),new g.Setting(e).setName("In Quick Switcher").setDesc("Enable property-based titles in the Quick Switcher (Ctrl+O).").addToggle(t=>t.setValue(this.plugin.settings.enableForQuickSwitcher).onChange(async s=>{let n=this.plugin.settings.enableForQuickSwitcher;this.plugin.settings.enableForQuickSwitcher=s,await this.plugin.saveSettings(n)})),new g.Setting(e).setName("Include filename in fuzzy searches").setDesc("Include note filenames in fuzzy search results for link suggester and Quick Switcher.").addToggle(t=>t.setValue(this.plugin.settings.includeFilenameInSearch).onChange(async s=>{this.plugin.settings.includeFilenameInSearch=s,await this.plugin.saveSettings(this.plugin.settings.enableForQuickSwitcher)})),new g.Setting(e).setName("Include aliases in fuzzy searches").setDesc("Include frontmatter aliases in fuzzy search results for link suggester and Quick Switcher.").addToggle(t=>t.setValue(this.plugin.settings.includeAliasesInSearch).onChange(async s=>{this.plugin.settings.includeAliasesInSearch=s,await this.plugin.saveSettings(this.plugin.settings.enableForQuickSwitcher)}))}};
