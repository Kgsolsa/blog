
---
import type { Page } from '@/types';
import { siteConfig } from '@/config';
import { generatePageSEO } from '@/utils/seo';
import { optimizePageImagePath } from '@/utils/images';
import BaseLayout from '@/components/BaseLayout.astro';
import TableOfContents from '@/components/TableOfContents.astro';
import Lightbox from '@/components/Lightbox.astro';
import { Image } from 'astro:assets';

export interface Props {
  page: Page;
}

const { page } = Astro.props;

// Render the page content
const { Content, headings } = await page.render();

// Generate SEO data
const seoData = generatePageSEO(page, Astro.url.href);

// Generate table of contents from headings
const toc = headings.filter(h => h.depth >= 2 && h.depth <= 4);

// Check if TOC should be shown - use frontmatter preference or global setting
const showTOC = page.data.showTOC !== undefined ? page.data.showTOC : siteConfig.features.tableOfContents;
const shouldShowTOC = showTOC && toc.length > 0;

// Generate structured data
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'WebPage',
  name: page.data.title,
  description: page.data.description,
  url: Astro.url.href,
  isPartOf: {
    '@type': 'WebSite',
    name: siteConfig.title,
    url: siteConfig.site
  },
  author: {
    '@type': 'Person',
    name: siteConfig.author
  }
};
---

<BaseLayout seoData={seoData}>
  <Fragment slot="head">
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  </Fragment>

  <div class="py-2 relative">
    <!-- TOC is hidden on mobile and tablet, only shown on desktop -->

    <div class="mx-auto px-4 sm:px-6 lg:px-8 relative" style={`max-width: ${siteConfig.layout.contentWidth}`}>
      <!-- Main content -->
      <article class="max-w-none">
        <!-- Page header -->
        <header>


          {page.data.image && (
            <div class="aspect-video overflow-hidden rounded-xl mt-8">
              <Image
                src={optimizePageImagePath(page.data.image)}
                alt={page.data.imageAlt || page.data.title}
                class="w-full h-full object-cover"
                width={800}
                height={450}
                loading="eager"
              />
            </div>
          )}
        </header>

        <!-- Page content -->
        <div class="prose prose-lg dark:prose-dark max-w-none">
          <Content />
        </div>
      </article>

      <!-- Desktop TOC - floats to the right of the content container -->
      {shouldShowTOC && (
        <div class="hidden xl:block absolute top-0 left-full ml-8 w-64">
          <div class="sticky top-24">
            <TableOfContents headings={toc} />
          </div>
        </div>
      )}
    </div>
  </div>

  <!-- Lightbox for images -->
  <Lightbox />
</BaseLayout>

