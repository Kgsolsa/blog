---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import PageLayout from '@/layouts/PageLayout.astro';

export const getStaticPaths: GetStaticPaths = async () => {
  // Get all pages
  const pages = await getCollection('pages');
  
  // Get all special pages
  const specialPages = await getCollection('special');

  // Filter out special pages that are handled by dedicated routes
  // Note: 'projects' and 'docs' are NOT filtered out here because they can be fallback pages
  const specialPageSlugs = ['index', '404'];
  const visiblePages = pages.filter(page => !specialPageSlugs.includes(page.slug));

  // Generate paths for regular pages
  const pagePaths = visiblePages.map(page => ({
    params: { slug: page.slug },
    props: { page }
  }));

  // Generate paths for special pages (excluding index and 404 which have special handling)
  const specialPaths = specialPages
    .filter(page => !['index', '404'].includes(page.slug))
    .map(page => ({
      params: { slug: page.slug },
      props: { page }
    }));

  return [...pagePaths, ...specialPaths];
};

export interface Props {
  page: any;
}

const { page } = Astro.props;

// Validate page data
if (!page) {
  return Astro.redirect('/404');
}

// Check if page is draft (only in production)
const isDev = import.meta.env.DEV;
if (!isDev && page.data.draft) {
  return Astro.redirect('/404');
}
---

<PageLayout page={page} />